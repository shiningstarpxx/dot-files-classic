# 
# tmux configuration settings
# 
#
# @author paolodedios
#
###############################################################################

###############################################################################
# On Mac OS X, launch reattach-to-user-namespace to enable copy-n-paste
###############################################################################

set-option -g default-command "reattach-to-user-namespace -l bash"

###############################################################################
# If you are using a 256 colour terminal, you will need to set the correct
# term in tmux. 
###############################################################################

set -g default-terminal "screen-256color"

###############################################################################
# Set scroll back buffer to 10k lines
###############################################################################

set -g history-limit 10000

###############################################################################
# Start tmux server and rebind keys
###############################################################################

start-server

unbind %

###############################################################################
# Set mode keys to use emacs style key bindings. The alternative is
# to use vi style key bindings
#  setw -g mode-keys vi
###############################################################################

setw -g mode-keys vi

###############################################################################
# Start window numbering at 1 and not 0
###############################################################################

set -g base-index 1

###############################################################################
# Set the title of the current window to something descriptive for the entire
# tmux session. This results in the current window being called 
#  "1. neon-vm:0.0.0 emacsclient justinlilly@neon-vm:~"
###############################################################################

set-option -g set-titles on

# window number,program name, active(or not)
set-option -g set-titles-string '#H:#S.#I.#P #W #T' 

###############################################################################
# Rebind the split window keys
###############################################################################

bind \ split-window -h
bind - split-window -v

###############################################################################
# Change the command hot-key prefix to something that is
# easier on the fingers (from C-a to C-x)
###############################################################################

set -g prefix C-x

###############################################################################
# C-x C-a for the Last Active Window
###############################################################################

bind-key C-a last-window

###############################################################################
# By default, all windows in a session are constrained to the size of
# the smallest client connected to that session, even if both clients  
# are looking at different windows. It seems that in this particular case,
# Screen has the better default where a window is only  constrained in
# size if a smaller client is actively looking at it. This behaviour can be
# fixed by setting tmux's aggressive-resize option
###############################################################################

setw -g aggressive-resize on

###############################################################################
# Set status bar look and feel
###############################################################################

set -g status on
set -g status-left-length  60
set -g status-right-length 60

set -g status-interval 2

set -g status-bg black
set -g status-fg white
set -g status-attr bright

set -g status-right '#[fg=yellow]#(uptime | cut -d "," -f 2-)'
set -g status-left  '#[fg=green]#H'

set-option -g status-utf8 on

###############################################################################
# Automatically set window title
###############################################################################

setw -g automatic-rename

###############################################################################
# Active window colors
###############################################################################

set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr bright

###############################################################################
# Default window colors
###############################################################################

set-window-option -g window-status-fg white
set-window-option -g window-status-bg black
set-window-option -g window-status-attr dim

###############################################################################
# Command message line colors
###############################################################################

set -g message-fg white
set -g message-bg black
set -g message-attr bright

###############################################################################
# Set a visual signal if there is activity in a window
###############################################################################

setw -g monitor-activity on
set  -g visual-activity  on

###############################################################################
# Automatically set window title to the current process
###############################################################################

setw -g automatic-rename

###############################################################################
# Additional key bindings
###############################################################################

###############################################################################
# reload configuration file
###############################################################################

bind l source ~/.tmux.conf

###############################################################################
# quit
###############################################################################

bind-key q confirm-before kill-server

###############################################################################
# displays
###############################################################################

bind-key * list-clients

###############################################################################
# redisplay (default key in tmux is 'r')
###############################################################################

bind-key r refresh-client

###############################################################################
# choose window/session
###############################################################################

bind-key "'" choose-window
bind-key '"' choose-session

###############################################################################
# copy and paste
###############################################################################

bind-key [ copy-mode
bind-key ] paste-buffer -s \015

###############################################################################
# copy and paste using the vi key bindings. while in copy mode:
#   'v' will activate highlighting
#   'y' will capture the highlighted string
###############################################################################

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

###############################################################################
# rebind C-c and C-v to use reattach-to-user-namespace
#
# copy-n-paste workflow:
#  1. Get into copy-mode C-x [
#  2. To highlight text, hit 'v'
#  3. After you have moved and some text is highlighted you can copy
#     into tmux buffer by hitting 'y'
#  4. Copy tmux buffer into system clipboard C-x C-c
#
###############################################################################

bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer - $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

###############################################################################
# enable mouse selection by holding the Option-key (aka Windows key)
###############################################################################

setw -g mode-mouse on

###############################################################################
# list all paste buffers (default key is '#')
###############################################################################

bind-key b list-buffers

###############################################################################
# choose paste buffer to paste interactively (default key was '=')
###############################################################################

bind-key p choose-buffer

###############################################################################
# delete the most recently copied paste buffer of text (default key was '-')
###############################################################################

bind-key x delete-buffer

###############################################################################
# navigate windows using 'h', 'l', and ctrl-h, ctrl-l (no prefix)
###############################################################################

bind-key -r h select-window -t :-
bind-key -r l select-window -t :+
bind-key -nr C-h select-window -t :-
bind-key -nr C-l select-window -t :+

###############################################################################
# navigate panes using 'j', 'k', and ctrl-j, ctrl-k (no prefix)
###############################################################################

bind-key -r j select-pane -t :.-
bind-key -r k select-pane -t :.+
bind-key -nr C-j select-pane -t :.-
bind-key -nr C-k select-pane -t :.+

###############################################################################
# Cycle to next pane
###############################################################################

bind-key -r Tab select-pane -t :.+

###############################################################################
# resize pane with arrow keys
# -r: can be repeated without pressing prefix
#     again (500ms after last '-r' action or prefix)
###############################################################################

# unbind Left  ; bind -r Left  resize-pane -L 2
# unbind Right ; bind -r Right resize-pane -R 2
# unbind Down  ; bind -r Down  resize-pane -D 2
# unbind Up    ; bind -r Up    resize-pane -U 2

###############################################################################
# swap panes
###############################################################################

unbind "C-o"
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

###############################################################################
# select pane via mouse
###############################################################################

set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

###############################################################################
# enable scrolling using the Shift-PageUp/Down keys:
###############################################################################

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

###############################################################################
# Bind 'S' to prompt for a host name for SSH
###############################################################################
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

